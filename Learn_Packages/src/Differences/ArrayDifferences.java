package Differences;

public class ArrayDifferences {
public static void main (String[] args) {
String [] c  = {"Helen" , "Alex", "Angeliki", "George"}; // Δεν πρέπει να βάλουμε τιμή μέσα στην αγκύλη.
	
int [] a = new int [5]; // Θα πρέπει να βάλουμε οποσδήποτε τιμή.
int b [] = new int [10];

/* Και στην Java και στην C# όταν αρχικοποιούμε έναν πίνακα δεν θα πρέπει να γράφουμε την λέξη new.
 * Στην C# επιτρέπεται μόνο οι αγκύλες να βρίσκονται μόνο μέσα στο όνομα της μεταβλητής.
 */
b[0] = 30;


int [] [] f = {{10, 20}, {30,40,50}}; //  Φτιάχνουμε έναν ακανόνιστο πίνακα.

// Ακανόνιστοι πίνακες.
int [] [] d = new int [10] []; // Είμαστε υποχρεωμένοι να δηλώσουμε την τιμή των γραμμών σε έναν 2D πίνακα.
int  e [] [] = new int [10] [];
d[0] = new int [] {10,30,40};
d[2] = new int [] {10,40}; // Πώς γίνεται να τα δίνει αυτόματα ο χρήστης????
d[1] [0] = 10;
d [1] [2] = 20;
for (int  p : a ) {
System.out.println(p);
}
}

}



/*
 Υ πάρχουν 2 τρόποι για να δημιουργήσουμε 2D πίνακες στην C#
 Ο πρώτος είναι για κανονικούς πίνακες (τετραγωνισμένους) και ο δεύτερος είναι για ακανόνιστους ή αλλιώς ζικ-ζακ.
 
int [,] k = new k [10,20]; Όταν θέλουμε να δημιουργήσουμε έναν κανονικό πίνακα με 10 γραμμές και 20 στήλες.
int [,] j = new j [,] {{10,20,30}, {30,40,50}...};
k[0,1] = 10??????
 
 Τοον κάτω τρόπο των χρησιμοποιούμε όταν θέλουμε να δημιουργήσουμε μη κανονικοποιημένους πίνακες.
 
 int [] [] g = new g [10] [];
 g [0]  = new int [] {10, 20, 30 ,40};
 g [1]  = new int [] {10, 20, 30};



*/